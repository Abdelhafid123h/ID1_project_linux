#!/usr/bin/python3
import argparse
import json
from datetime import datetime
import os

def create_file_with_metadata(filename, metadata_file_path):
    # Get the current date for creation timestamp
    creation_date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # Read owner and permissions from the permissions file
    owner_path = os.path.join(os.path.dirname(__file__), '..', 'data',  'check_user_file.txt')
    droits_path = os.path.join(os.path.dirname(__file__), '..', 'permissions.txt')

    try:
        with open(droits_path, 'r') as droits_file:
            droits = droits_file.read().strip()
    except FileNotFoundError:
        print(f"Error: droits file not found at {droits_path}")
        return

    try:
        with open(owner_path, 'r') as owner_file:
            owner = owner_file.read().strip()
    except FileNotFoundError:
        print(f"Error: owner file not found at {owner_path}")
        return

    # Get the full file path
    file_path = os.path.join(os.path.dirname(__file__), '..', 'home', owner, filename)

    # Append metadata to the metadata JSON file
    try:
        with open(metadata_file_path, 'r') as metadata_file:
            metadata_data = json.load(metadata_file)
    except (FileNotFoundError, json.JSONDecodeError):
        metadata_data = []

    # Create the file (empty)
    with open(file_path, 'w') as file:
        file.write("")

    # Get the file size
    size = os.path.getsize(file_path)

    metadata_entry = {
        'Name'         : filename,
        'Type'         : 'file',
        'Owner'        :owner,
        'Size'         :size,
        'Location'     : file_path,
        'Date Created' : creation_date,
        'Permissions'  : droits,
        'Status'       : 'Available'
    }

    metadata_data.append(metadata_entry)

    with open(metadata_file_path, 'w') as metadata_file:
        json.dump(metadata_data, metadata_file, indent=2)

    print(f"File '{filename}' created successfully with metadata.")
    text_to_append = f'{filename} is created at {creation_date} with size {size} bytes\n'
    with open(os.path.join(os.path.dirname(__file__), '..','data', 'journal.txt'), 'a') as file4:
        file4.write(text_to_append)

def main():
    # Create an argument parser
    parser = argparse.ArgumentParser(description="Create a file with metadata")

    # Define command-line arguments
    parser.add_argument("filename", type=str, help="Name of the file to create")

    # Specify the path to the metadata JSON file
    metadata_file_path = os.path.join(os.path.dirname(__file__), '..', 'data', 'metadata.json')

    # Parse the command-line arguments
    args = parser.parse_args()

    # Call the create_file_with_metadata function with the provided filenames
    try:
     create_file_with_metadata(args.filename, metadata_file_path)
    except:
     print('permession denied')
if __name__ == "__main__":
    main()
